{"version":3,"sources":["GetToken.tsx","hooks/useSymbols.ts","hooks/useLocalStorage.ts","SymbolsEditor.tsx","requestQueue.ts","Chart.tsx","Widget.tsx","hooks/useFinnhub.ts","WidgetList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GetToken","useState","token","setToken","onChange","useCallback","e","currentTarget","value","onSubmit","preventDefault","localStorage","setItem","window","location","reload","className","href","type","useSymbols","key","defaultValue","_setValue","useEffect","getItem","setValue","useLocalStorage","symbols","split","map","symbol","trim","setSymbols","join","SymbolsEditor","props","isInitialRender","setIsInitialRender","inputValues","setInputValues","console","log","values","requestQueue","pushReqest","url","callback","push","processRequestQueue","a","length","shift","axios","get","data","setTimeout","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Chart","chartData","color","labels","x","datasets","y","label","borderColor","borderWidth","style","height","width","marginTop","options","responsive","maintainAspectRatio","outerHeight","backgroundColor","scales","display","elements","point","radius","plugins","legend","position","title","text","tooltip","enabled","decimation","Widget","name","setName","current","setCurrent","change","setChange","setChartData","quoteUpdatedTime","setQuoteUpdatedTime","chartUpdatedTime","setChartUpdatedTime","getProfile","getQuote","c","o","updated","now","getCandles","end","moment","unix","start","subtract","i","quoteInterval","setInterval","candleInterval","clearInterval","useFinnhub","lastQuote","setLastQuote","lastQuoteChange","setLastQuoteChange","setClassName","timeout","clearTimeout","Math","round","WidgetList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAwBeA,EAtBE,WAAO,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,KAGhBC,EAAWC,uBAAY,SAACC,GAC7BH,EAASG,EAAEC,cAAcC,SACvB,IAEGC,EAAWJ,uBAAY,SAACC,GAC7BA,EAAEI,iBACFC,aAAaC,QAAQ,oBAAqBV,GAC1CW,OAAOC,SAASC,WACd,CAACb,IAEJ,OAAO,qBAAKc,UAAU,YAAf,SACN,uBAAMP,SAAUA,EAAUO,UAAU,QAApC,UACC,kCAAO,mBAAGC,KAAK,sBAAR,qBAAP,gBACA,8BAAK,uBAAOC,KAAK,OAAOd,SAAUA,MAClC,8BAAK,uBAAOc,KAAK,SAASV,MAAM,mBCjBtBW,EAAa,WAAO,IAAD,ECAD,SAACC,EAAaC,GAA0B,IAAD,EACvCpB,mBAAwB,MADe,mBAC3DO,EAD2D,KACpDc,EADoD,KAelE,OAZAC,qBAAU,WACN,IAAIf,EAAQG,aAAaa,QAAQJ,GAEnB,OAAVZ,GACAG,aAAaC,QAAQQ,EAAKC,GAG9Bb,EAAQG,aAAaa,QAAQJ,GAE7BE,EAAUd,KACX,CAACY,EAAKC,IAEF,CACHb,QACEiB,SAAU,SAACjB,GACTG,aAAaC,QAAQQ,EAAKZ,GAC1Bc,EAAUd,KDlBUkB,CAAgB,kBAAoB,2BAAxDlB,EADoB,EACpBA,MAAOiB,EADa,EACbA,SAEf,MAAO,CACHE,QAAO,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAoBA,EAAOC,UACxDC,WAAY,SAACL,GACXF,EAASE,EAAQE,KAAI,SAACC,GAAD,OAAoBA,EAAOC,UAAQE,KAAK,UE+B1DC,EAhCO,SAACC,GAA+B,IAC1CR,EAAwBQ,EAAxBR,QAASK,EAAeG,EAAfH,WADgC,EAEH/B,oBAAS,GAFN,mBAE1CmC,EAF0C,KAEzBC,EAFyB,OAGXpC,mBAAmB,IAHR,mBAG1CqC,EAH0C,KAG7BC,EAH6B,KAKjDhB,qBAAU,WACFI,GAAWS,IACXI,QAAQC,IAAI,UAAWd,GAEvBY,EAAeZ,GACfU,GAAmB,MAExB,CAACV,EAASS,IAYb,OAAO,qBAAKpB,UAAU,iBAAf,SACH,sBAAMP,SAXW,SAACH,GAClBA,EAAEI,iBACFsB,EAAWM,IASX,SACI,uBAAOpB,KAAK,OAAOV,MAAO8B,EAAYL,KAAK,KAAM7B,SAPpC,SAACE,GAClB,IAAMoC,EAASpC,EAAEC,cAAcC,MAAMoB,MAAM,KAC3CW,EAAeG,W,0DCrBjBC,EAAmC,GAE5BC,EAAa,SAACC,EAAaC,GACpCH,EAAaI,KAAK,CAAEF,MAAKC,cAGhBE,EAAmB,uCAAG,oCAAAC,EAAA,0DAC3BN,EAAaO,OADc,yBAEDP,EAAaQ,QAA/BN,EAFmB,EAEnBA,IAAKC,EAFc,EAEdA,SAFc,SAGJM,IAAMC,IAAIR,GAHN,gBAGnBS,EAHmB,EAGnBA,KAERd,QAAQC,IAAII,GAEZC,EAASQ,GAPkB,OAU/BC,WAAWP,EAAqB,KAVD,2CAAH,qD,uBCEhCQ,IAAQC,SACJC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAQJ,IAiEeC,EAjED,SAAC9B,GAAuB,IAC1B+B,EAAc/B,EAAd+B,UAER,IAAKA,IAAcA,EAAUhB,OACzB,OAAO,qBAAKlC,UAAU,oBAAf,SACH,cAAC,eAAD,CAAcmD,MAAM,cAI5B,IAuCMb,EAA0B,CAC5Bc,OAAQF,EAAUrC,KAAI,SAACyB,GAAD,OAAeA,EAAKe,KACxCC,SAAU,CACR,CACIhB,KAAMY,EAAUrC,KAAI,SAACyB,GAAD,OAAeA,EAAKiB,KACtCC,MAAO,OACPC,YAAaP,EAAUA,EAAUhB,OAAS,GAAGqB,EAAIL,EAAU,GAAGK,EAAI,EAAI,UAAY,UAClFG,YAAa,OAK3B,OAAO,qBAAKC,MAAO,CAAEC,OAAQ,MAAOC,MAAO,OAAQC,UAAW,QAAvD,SACH,cAAC,IAAD,CAAMC,QApDM,CACZC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,GACbC,gBAAiB,MACjBC,OAAQ,CACJb,EAAG,CACCc,SAAS,GAEbhB,EAAG,CACCgB,SAAS,IAIjBC,SAAU,CACNC,MAAO,CACHC,OAAQ,IAIhBC,QAAS,CACLC,OAAQ,CACJC,SAAU,MACVN,SAAS,GAEbO,MAAO,CACHP,SAAS,EACTQ,KAAM,uBAEVC,QAAS,CACLC,SAAS,GAEbC,WAAY,CACRD,SAAS,KAmBOzC,KAAMA,OC7BvB2C,EArDA,SAAC9D,GAAwB,IAAD,ECDb,SAACL,GAAoB,IAAD,EAClB7B,mBAAS,IADS,mBACnCiG,EADmC,KAC7BC,EAD6B,OAEZlG,mBAAS,GAFG,mBAEnCmG,EAFmC,KAE1BC,EAF0B,OAGdpG,mBAAS,GAHK,mBAGnCqG,EAHmC,KAG3BC,EAH2B,OAIRtG,mBAAgB,IAJR,mBAInCiE,EAJmC,KAIxBsC,EAJwB,OAMMvG,mBAAiB,GANvB,mBAMnCwG,EANmC,KAMjBC,EANiB,OAOMzG,mBAAiB,GAPvB,mBAOnC0G,EAPmC,KAOjBC,EAPiB,KASpCC,EAAaxG,sBAAW,uCAAC,WAAOH,GAAP,eAAA+C,EAAA,sDACrBJ,EADqB,0DACoCf,EADpC,kBACoD5B,GAE/E0C,EAAWC,GAAK,SAACS,GACb6C,EAAQ7C,EAAK4C,SAJU,2CAAD,sDAM3B,CAACpE,IAEEgF,EAAWzG,sBAAW,uCAAC,WAAOH,GAAP,eAAA+C,EAAA,sDACnBJ,EADmB,iDAC6Bf,EAD7B,kBAC6C5B,GAEtE0C,EAAWC,GAAK,SAACS,GACb,IAAM8C,EAAU9C,EAAKyD,EACfT,EAAShD,EAAKyD,EAAIzD,EAAK0D,EACvBC,EAAUC,gBAEhBb,EAAWD,GACXG,EAAUD,GACVI,EAAoBO,MAVC,2CAAD,sDAYzB,CAACnF,IAEEqF,EAAa9G,sBAAW,uCAAC,WAAOH,GAAP,mBAAA+C,EAAA,sDACrBmE,EAAMC,MAASC,OACfC,EAAQF,MAASG,SAAS,EAAG,UAAUF,OAEvCzE,EAJqB,wDAIkCf,EAJlC,kBAIkD5B,EAJlD,8BAI6EqH,EAJ7E,eAIyFH,GAEpHxE,EAAWC,GAAK,SAACS,GACb,IAAMY,EAAY,GAElB,GAAIZ,EAAKyD,EACL,IAAK,IAAIU,EAAI,EAAGA,EAAInE,EAAKyD,EAAE7D,OAAQuE,IAC/BvD,EAAUnB,KAAK,CAAEsB,EAAGoD,EAAI,EAAGlD,EAAGjB,EAAKyD,EAAEU,KAI7CjB,EAAatC,GACb0C,EAAoBM,oBAhBG,2CAAD,sDAkB3B,CAACpF,IA0BJ,OAxBAP,qBAAU,WACNiB,QAAQC,IAAI,gBAAiB,CAACX,EAAQ+E,EAAYC,EAAUK,IAE5D,IAAMjH,EAAQS,aAAaa,QAAQ,qBAEnCqF,EAAW3G,GACX4G,EAAS5G,GACTiH,EAAWjH,GAEX,IAAMwH,EAAgBC,aAAY,WAC9Bb,EAAS5G,KAhEG,KAmEV0H,EAAiBD,aAAY,WAC/BR,EAAWjH,KAnEE,KAsEjB,OAAO,WACH2H,cAAcH,GACdG,cAAcD,MAEnB,CAAC9F,EAAQ+E,EAAYC,EAAUK,IAG3B,CACHjB,OACEE,UACAE,SACApC,YACAuC,mBACAE,oBD/EuCmB,CAAW3F,EAAML,QAAtDoE,EAD2B,EAC3BA,KAAME,EADqB,EACrBA,QAASE,EADY,EACZA,OAAQpC,EADI,EACJA,UADI,EAEDjE,mBAASmG,GAFR,mBAE5B2B,EAF4B,KAEjBC,EAFiB,OAGW/H,mBAAS,GAHpB,mBAG5BgI,EAH4B,KAGXC,EAHW,OAIDjI,mBAAS,UAJR,mBAI5Be,EAJ4B,KAIjBmH,EAJiB,KAkCnC,OA5BA5G,qBAAU,WACF6E,GAAW2B,GAAa3B,IAAY2B,GACpCG,EAAmB9B,EAAU2B,GAGjCC,EAAa5B,KACd,CAACA,EAAS2B,IAEbxG,qBAAU,WACN,GAAwB,IAApB0G,EAAJ,CAKIE,EADAF,EAAkB,EACL,mBAEA,sBAGjB,IAAMG,EAAU7E,YAAW,WACvB4E,EAAa,YACd,KAEH,OAAO,WACHE,aAAaD,OAElB,CAACH,IAEG,sBAAKjH,UAAWA,EAAhB,UACH,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,6BAAKmB,EAAML,SACX,4BAAIoE,OAGR,sBAAKlF,UAAU,QAAf,UACI,6BAAKoF,IACL,mBAAGpF,UAAWsF,EAAS,EAAI,MAAQ,QAAnC,SAA6CgC,KAAKC,MAAe,IAATjC,GAAgB,YAIhF,cAAC,EAAD,CAAOpC,UAAWA,QErCXsE,EAdI,WAAO,IAAD,EACQrH,IAAxBQ,EADgB,EAChBA,QAASK,EADO,EACPA,WAEjB,OAAO,qCACN,cAAC,EAAD,CAAeL,QAASA,EAASK,WAAYA,IAE7C,qBAAKhB,UAAU,cAAf,gBAEEW,QAFF,IAEEA,OAFF,EAEEA,EAASE,KAAI,SAACC,GAAD,OAAoB,cAAC,EAAD,CAAqBA,OAAQA,GAAhBA,YCAnC2G,EAVH,WACX,OAAK9H,aAAaa,QAAQ,qBAInB,qBAAKR,UAAU,MAAf,SACN,cAAC,EAAD,MAJO,cAAC,EAAD,KCSM0H,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BvG,IAMA0F,M","file":"static/js/main.267f0ecd.chunk.js","sourcesContent":["import { ChangeEvent, FormEvent, useState, useCallback } from \"react\"\n\nconst GetToken = () => {\n\tconst [token, setToken] = useState(\"\")\n\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetToken(e.currentTarget.value)\n\t}, [])\n\n\tconst onSubmit = useCallback((e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault()\n\t\tlocalStorage.setItem(\"finnhub_api_token\", token)\n\t\twindow.location.reload()\n\t}, [token])\n\n\treturn <div className=\"get-token\">\n\t\t<form onSubmit={onSubmit} className=\"token\">\n\t\t\t<label><a href=\"https://finnhub.io/\">Finnhub</a> API Token</label>\n\t\t\t<div><input type=\"text\" onChange={onChange} /></div>\n\t\t\t<div><input type=\"submit\" value=\"Submit\" /></div>\n\t\t</form>\n\t</div>\n}\n\nexport default GetToken","import { useLocalStorage } from \"./useLocalStorage\"\n\nexport const useSymbols = () => {\n    const { value, setValue } = useLocalStorage(\"finnhub_symbols\",  \"AAPL,TSLA,AMD,NVDA,INTC\")\n\n    return {\n        symbols: value?.split(\",\").map((symbol: string) => symbol.trim())\n        , setSymbols: (symbols: string[]) => {\n            setValue(symbols.map((symbol: string) => symbol.trim()).join(\", \"))\n        }\n    }\n}","import { useState, useEffect } from \"react\"\n\nexport const useLocalStorage = (key: string, defaultValue: string) => {\n    const [value, _setValue] = useState<string | null>(null)\n\n    useEffect(() => {\n        let value = localStorage.getItem(key)\n        \n        if (value === null) {\n            localStorage.setItem(key, defaultValue)\n        }\n\n        value = localStorage.getItem(key)\n\n        _setValue(value!)\n    }, [key, defaultValue])\n\n    return {\n        value\n        , setValue: (value: string) => {\n            localStorage.setItem(key, value)\n            _setValue(value)\n        }\n    }\n}","import { useEffect, useState, FormEvent, ChangeEvent } from \"react\"\n\ninterface SymbolsEditorProps {\n    symbols: string[] | undefined\n    setSymbols: (symbols: string[]) => void\n}\n\nconst SymbolsEditor = (props: SymbolsEditorProps) => {\n    const { symbols, setSymbols } = props\n    const [isInitialRender, setIsInitialRender] = useState(true)\n    const [inputValues, setInputValues] = useState<string[]>([])\n\n    useEffect(() => {\n        if (symbols && isInitialRender) {\n            console.log(\"symbols\", symbols)\n\n            setInputValues(symbols)\n            setIsInitialRender(false)\n        }\n    }, [symbols, isInitialRender])\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault()\n        setSymbols(inputValues)\n    }\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const values = e.currentTarget.value.split(\",\")\n        setInputValues(values!)\n    }\n\n    return <div className=\"symbols-editor\">\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValues.join(\",\")} onChange={handleChange} />\n            {/* <input type=\"submit\" value=\"Update\" /> */}\n        </form>\n    </div>\n}\n\nexport default SymbolsEditor","import axios from \"axios\"\n\ninterface RequestQueueItem {\n    url: string\n    callback: (data: any) => void\n}\n\nconst requestQueue: RequestQueueItem[] = []\n\nexport const pushReqest = (url: string, callback: (data: any) => void) => {\n    requestQueue.push({ url, callback })\n}\n\nexport const processRequestQueue = async () => {\n    if (requestQueue.length) {\n        const { url, callback } = requestQueue.shift()!\n        const { data } = await axios.get(url)\n        \n        console.log(url)\n        \n        callback(data)\n    }\n\n    setTimeout(processRequestQueue, 1000)\n}","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ChartData,\n} from 'chart.js';\nimport { Line } from \"react-chartjs-2\"\n\nimport { PulseSpinner } from \"react-spinners-kit\"\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n\ninterface ChartProps {\n    chartData: any[]\n}\n\nconst Chart = (props: ChartProps) => {\n    const { chartData } = props\n\n    if (!chartData || !chartData.length) {\n        return <div className=\"spinner-container\">\n            <PulseSpinner color=\"#839496\" />\n        </div>\n    }\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        outerHeight: 80,\n        backgroundColor: \"red\",\n        scales: {\n            y: {\n                display: false,\n            },\n            x: {\n                display: false,\n            },\n        },\n\n        elements: {\n            point: {\n                radius: 0\n            }\n        },\n\n        plugins: {\n            legend: {\n                position: 'top' as const,\n                display: false,\n            },\n            title: {\n                display: false,\n                text: 'Chart.js Line Chart',\n            },\n            tooltip: {\n                enabled: false,\n            },\n            decimation: {\n                enabled: false,\n            }\n\n        },\n    }\n\n    const data: ChartData<\"line\"> = {\n        labels: chartData.map((data: any) => data.x)\n        , datasets: [\n            {\n                data: chartData.map((data: any) => data.y)\n                , label: \"oops\"\n                , borderColor: chartData[chartData.length - 1].y - chartData[0].y < 0 ? \"#dc322f\" : \"#859900\"\n                , borderWidth: 1.5\n            }\n        ]\n    }\n\n    return <div style={{ height: \"5em\", width: \"100%\", marginTop: \".5em\" }}>\n        <Line options={options} data={data} />\n    </div>\n}\n\nexport default Chart","import { useEffect, useState } from 'react'\nimport { useFinnhub } from \"./hooks/useFinnhub\"\n\nimport Chart from \"./Chart\"\n\nexport interface WidgetProps {\n    symbol: string\n}\n\nconst Widget = (props: WidgetProps) => {\n    const { name, current, change, chartData } = useFinnhub(props.symbol)\n    const [lastQuote, setLastQuote] = useState(current)\n    const [lastQuoteChange, setLastQuoteChange] = useState(0)\n    const [className, setClassName] = useState(\"widget\")\n\n    useEffect(() => {\n        if (current && lastQuote && current !== lastQuote) {\n            setLastQuoteChange(current - lastQuote)\n        }\n\n        setLastQuote(current)\n    }, [current, lastQuote])\n\n    useEffect(() => {\n        if (lastQuoteChange === 0) {\n            return\n        }\n\n        if (lastQuoteChange < 0) {\n            setClassName(\"widget blink-red\")\n        } else {\n            setClassName(\"widget blink-green\")\n        }\n\n        const timeout = setTimeout(() => {\n            setClassName(\"widget\")\n        }, 1000)\n\n        return () => {\n            clearTimeout(timeout)\n        }\n    }, [lastQuoteChange])\n\n    return <div className={className}>\n        <div className=\"grid-container\">\n            <div className=\"profile\">\n                <h3>{props.symbol}</h3>\n                <p>{name}</p>\n            </div>\n\n            <div className=\"quote\">\n                <h3>{current}</h3>\n                <p className={change < 0 ? \"red\" : \"green\"}>{Math.round(change * 100) / 100}</p>\n            </div>\n        </div>\n\n        <Chart chartData={chartData} />\n    </div>\n}\n\n\n\nexport default Widget","import { useCallback, useEffect, useState } from \"react\"\nimport moment, { now } from \"moment\"\n\nimport { pushReqest } from \"../requestQueue\"\n\nconst quoteIntervalMS = 30000\nconst candleIntervalMS = 300000\n\nexport const useFinnhub = (symbol: string) => {\n    const [name, setName] = useState(\"\")\n    const [current, setCurrent] = useState(0.0)\n    const [change, setChange] = useState(0.0)\n    const [chartData, setChartData] = useState<any[]>([])\n\n    const [quoteUpdatedTime, setQuoteUpdatedTime] = useState<number>(0)\n    const [chartUpdatedTime, setChartUpdatedTime] = useState<number>(0)\n\n    const getProfile = useCallback(async (token: string) => {\n        const url = `https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${token}`\n\n        pushReqest(url, (data: any) => {\n            setName(data.name)\n        })\n    }, [symbol])\n\n    const getQuote = useCallback(async (token: string) => {\n        const url = `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${token}`\n\n        pushReqest(url, (data: any) => {\n            const current = data.c\n            const change = data.c - data.o\n            const updated = now()\n\n            setCurrent(current)\n            setChange(change)\n            setQuoteUpdatedTime(updated)\n        })\n    }, [symbol])\n\n    const getCandles = useCallback(async (token: string) => {\n        const end = moment().unix()\n        const start = moment().subtract(6, 'months').unix()\n\n        const url = `https://finnhub.io/api/v1/stock/candle?symbol=${symbol}&token=${token}&resolution=D&from=${start}&to=${end}`\n\n        pushReqest(url, (data: any) => {\n            const chartData = []\n\n            if (data.c) {\n                for (let i = 0; i < data.c.length; i++) {\n                    chartData.push({ x: i + 1, y: data.c[i] })\n                }\n            }\n\n            setChartData(chartData)\n            setChartUpdatedTime(now())\n        })\n    }, [symbol])\n\n    useEffect(() => {\n        console.log(\"dependencies:\", [symbol, getProfile, getQuote, getCandles])\n\n        const token = localStorage.getItem(\"finnhub_api_token\")!\n\n        getProfile(token)\n        getQuote(token)\n        getCandles(token)\n\n        const quoteInterval = setInterval(() => {\n            getQuote(token)\n        }, quoteIntervalMS)\n\n        const candleInterval = setInterval(() => {\n            getCandles(token)\n        }, candleIntervalMS)\n\n        return () => {\n            clearInterval(quoteInterval)\n            clearInterval(candleInterval)\n        }\n    }, [symbol, getProfile, getQuote, getCandles])\n\n\n    return {\n        name\n        , current\n        , change\n        , chartData\n        , quoteUpdatedTime\n        , chartUpdatedTime\n    }\n}","import { useSymbols } from \"./hooks/useSymbols\"\n\nimport SymbolsEditor from \"./SymbolsEditor\"\nimport Widget from \"./Widget\"\n\nconst WidgetList = () => {\n\tconst { symbols, setSymbols } = useSymbols()\n\n\treturn <>\n\t\t<SymbolsEditor symbols={symbols} setSymbols={setSymbols} />\n        \n\t\t<div className=\"widget-list\">\n\t\t\t{\n\t\t\t\tsymbols?.map((symbol: string) => <Widget key={symbol} symbol={symbol} />)\n\t\t\t}\n\t\t</div>\n\t</>\n}\n\nexport default WidgetList","import GetToken from \"./GetToken\"\nimport WidgetList from \"./WidgetList\"\n\nconst App = () => {\n\tif (!localStorage.getItem(\"finnhub_api_token\")) {\n\t\treturn <GetToken />\n\t}\n\n\treturn <div className=\"App\">\n\t\t<WidgetList />\n\t</div>\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { processRequestQueue } from \"./requestQueue\"\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nprocessRequestQueue()\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}